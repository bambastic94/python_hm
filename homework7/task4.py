"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы. Подсказка:
матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов
класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""

class Matrix:
    def __init__(self, lst):
        self.matr = lst

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matr]))

    def __add__(self, other):
        result = []
        numbers = []
        for i in range(len(self.matr)):
            for j in range(len(self.matr[0])):
                summa = other.matr[i][j] + self.matr[i][j]
                numbers.append(summa)
                if len(numbers) == len(self.matr[0]):
                    result.append(numbers)
                    numbers = []
        return Matrix(result)


a = [[4, 5, -5], [2, 6, -5], [4, 33, 0]]
b = [[1, -5, 9], [16, -1, -5], [5, 63, 4]]
m1 = Matrix(a)
m2 = Matrix(b)

print("Matrix 1")
print(m1.__str__(), '\n')

print("Matrix 2")
print(m2.__str__(), '\n')

print("Matrix 1 + Matrix 2")
print(m1 + m2)


