"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even(num):
    ric = 0
    if (num % 10) % 2 == 0 and num > 9:
        ric += 1
        return ric + even(num // 10)
    elif num > 9:
        return 0 + even(num // 10)
    if (num % 10) % 2 == 0 and num <= 9:
        return 1
    elif num <=9:
        return 0
def odd(num):
    ric = 0
    if (num % 10) % 2 == 1 and num > 9:
        ric += 1
        return ric + odd(num // 10)
    elif num > 9:
        return 0 + odd(num // 10)
    if (num % 10) % 2 == 1 and num <= 9:
        return 1
    elif num <= 9:
        return 0

number = int(input("Введите число: "))


print(f"Количество четных и нечетных цифр в числе равно: ({even(number)}, {odd(number)})")
