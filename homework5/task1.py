"""
Задание 1. Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def operation():
    sign = input("Введите операцию (+, -, *, / или 0 для выхода): ")
    if sign == "0":
        return print("Вы вышли из программы")
    if sign not in {"+", "-", "*", "/"}:
        print(f"Вы вместо предложенных символов ввели {sign}. Исправьтесь")
        return operation()

    a = input("Введите первое число: ")
    try:
        a = int(a)
    except ValueError:
        print(f"Вы вместо числа ввели {a}. Исправьтесь")
        operation()

    b = input("Введите второе число: ")
    try:
        b = int(b)
    except ValueError:
        print(f"Вы вместо числа ввели {b}. Исправьтесь")
        operation()
    if sign == "/" and b == 0:
        print("Вы делите на ноль")
        operation()

    signs = {"+": a + b, "-": a - b, "*": a * b, "/": a / b}
    return print(signs[sign])


operation()
